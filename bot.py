# bot.py
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from database import init_db, save_link, get_links
import asyncio
import os

bot = Bot(token=os.getenv(8150760033:AAFJDQ67L9h0nrTCtPOzPHf0kK1NI75bL-E))
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
async def on_startup():
    await init_db()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def get_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.button(text="–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É ‚ûï")
    builder.button(text="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫–∏ üîç")
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(
        "üìö –ë–æ—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏:",
        reply_markup=get_keyboard()
    )

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
@dp.message(lambda msg: msg.text and msg.text.startswith(('http://', 'https://')))
async def add_link(message: types.Message):
    await save_link(message.text)
    await message.answer("‚úÖ –°—Å—ã–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏
@dp.message(lambda msg: msg.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫–∏ üîç")
async def show_links(message: types.Message):
    links = await get_links()
    if not links:
        await message.answer("üì≠ –°—Å—ã–ª–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç")
        return
    
    response = "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Å—ã–ª–∫–∏:\n\n" + "\n".join([f"{i+1}. {link.url}" for i, link in enumerate(links)])
    await message.answer(response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await on_startup()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())